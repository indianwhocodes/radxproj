/* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* */
/* ** Copyright UCAR (c) 1992 - 2010 */
/* ** University Corporation for Atmospheric Research(UCAR) */
/* ** National Center for Atmospheric Research(NCAR) */
/* ** Research Applications Laboratory(RAL) */
/* ** P.O.Box 3000, Boulder, Colorado, 80307-3000, USA */
/* ** 2010/10/7 23:11:39 */
/* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* */

This is something to be run locally at RAL by a software
engineer.

In this directory is an application that can automatically
update a TDRP param file, and a set of scripts that drive it
so that it can update a lot of parameter files at once. The
basis of it is that most param files are named after the
application they apply to with a dot extension, ie. the
param file "Dsr2Vol.params" clearly applies to the app
"Dsr2Vol".

If a param file does not follow this naming convention then
the scheme fails - a message will be printed to this effect.
For instance, for the param file "Titan1.params" this system
will look for an application called "Titan1", fail to find it,
print a message to that effect and exit.

USE THE SYSTEM AS FOLLOWS :

 [1] Get your param files into directories that have the
     string 'params' in the name of the directory, and point
     the environment variable $PROJ_DIR to somewhere above
     the top of these directories (this may already be the
     case).

 [2] Have the apps whose param files you are updating in
     your path - again, this may already be the case.

 [3] In this directory (ie. the directory with this READ.ME
     file in it) execute the 'make' command,
     then do the following :

          ./checkParamFile -print_params > updateAllParams.params 

     I'm assuming the user is a software engineer who will know
     if the make command fails.

 [4] Edit the file updateAllParams.params - by default, it does
     no automatic param file updating and leaves core files alone.
     Set it to be more agressive if you like.

 [5] Run the ./checkAllParamFiles script. Direct output to
     a log file, so do this with a command like :

        ./checkAllParamFiles >& parameterUpdates.log

 [6] Have a look at the log - there are likely some parameter
     files that do not follow the naming convention and will
     need to be attended to by hand.

Niles Oien April 2006
