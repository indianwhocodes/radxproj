# makefile.in generated by automake 1.15 from makefile.am.
# libs/radar/src/makefile.  Generated from makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



###############################################
#
# makefile template for automake
#
# library name: radar
#
# written by script createMakefile.am.lib
#
# created 2016-03-27 13:55:29.083895
#
###############################################

# compile flags - include header subdirectory



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/radx
pkgincludedir = $(includedir)/radx
pkglibdir = $(libdir)/radx
pkglibexecdir = $(libexecdir)/radx
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
subdir = libs/radar/src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/makefile.am $(include_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libradar_la_LIBADD =
am_libradar_la_OBJECTS = RadarComplex.lo ConvStrat.lo spol_C_utils.lo \
	DFileInput.lo dd_mapper.lo dd_sweepfiles.lo dd_testify.lo \
	dd_utils.lo kdp_calcs.lo DpolFilter.lo FilterUtils.lo \
	BeamHeight.lo chill_to_iwrf.lo iwrf_functions.lo IwrfCalib.lo \
	IwrfTsBurst.lo IwrfTsInfo.lo IwrfTsPulse.lo IwrfTsReader.lo \
	rsm_functions.lo KdpBringi.lo KdpCompute.lo KdpFilt.lo \
	AlternatingVelocity.lo AtmosAtten.lo ClutFilter.lo GateData.lo \
	MomentsFields.lo InterestMap.lo IwrfMoments.lo \
	IwrfMomReader.lo NoiseLocator.lo PhaseCoding.lo RadarFft.lo \
	RadarMoments.lo RegressionFilter.lo Sz864.lo NcarParticleId.lo \
	PidImapManager.lo PidInterestMap.lo TempProfile.lo \
	PrecipRate.lo RadxAppParams.lo RadxApp.lo RadxAppArgs.lo \
	RadxAppConfig.lo spol_angles.lo RadarTsInfo.lo RadarTsPulse.lo \
	RadarTsReader.lo
libradar_la_OBJECTS = $(am_libradar_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libradar_la_SOURCES)
DIST_SOURCES = $(libradar_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(include_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/sugar/Developer/radx2grid/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /home/sugar/Developer/radx2grid/missing autoconf
AUTOHEADER = ${SHELL} /home/sugar/Developer/radx2grid/missing autoheader
AUTOMAKE = ${SHELL} /home/sugar/Developer/radx2grid/missing automake-1.15
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS =  -I/home/sugar/Developer/radx_build_gcc/include -I/home/sugar/Developer/radx_build_gcc/include
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O0 -g -std=c++14
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
HDF5DIR = /home/sugar/Developer/radx_build_gcc
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = -L/home/sugar/Developer/radx_build_gcc/lib -L/home/sugar/Developer/radx_build_gcc/lib -L/home/sugar/Developer/radx_build_gcc/lib
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /home/sugar/Developer/radx2grid/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
NETCDFDIR = /home/sugar/Developer/radx_build_gcc
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = radx
PACKAGE_BUGREPORT = http://www.ral.ucar.edu/projects/titan/docs
PACKAGE_NAME = radx
PACKAGE_STRING = radx 1.0
PACKAGE_TARNAME = radx
PACKAGE_URL = 
PACKAGE_VERSION = 1.0
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 1.0
abs_builddir = /home/sugar/Developer/radx2grid/libs/radar/src
abs_srcdir = /home/sugar/Developer/radx2grid/libs/radar/src
abs_top_builddir = /home/sugar/Developer/radx2grid
abs_top_srcdir = /home/sugar/Developer/radx2grid
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}

# headers to be installed
includedir = $(prefix)/include/radar
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/sugar/Developer/radx2grid/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/sugar/Developer/radx_build_gcc
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..
# NOTE: X11R6 is for Mac OSX location of XQuartz
AM_CFLAGS = -I./include -I/usr/X11R6/include -I../../Fmq/src/include \
	-I../../Mdv/src/include -I../../Radx/src/include \
	-I../../Spdb/src/include -I../../dataport/src/include \
	-I../../didss/src/include -I../../dsserver/src/include \
	-I../../dsdata/src/include -I../../euclid/src/include \
	-I../../physics/src/include -I../../radar/src/include \
	-I../../rapformats/src/include -I../../rapmath/src/include \
	-I../../tdrp/src/include -I../../toolsa/src/include \
	-I../../kd/src/include
ACLOCAL_AMFLAGS = -I m4
AM_CXXFLAGS = $(AM_CFLAGS)

# target library file
lib_LTLIBRARIES = libradar.la
include_HEADERS = \
	include/radar/AlternatingVelocity.hh \
	include/radar/AtmosAtten.hh \
	include/radar/BeamHeight.hh \
	include/radar/ClutFilter.hh \
	include/radar/ConvStrat.hh \
	include/radar/DpolFilter.hh \
	include/radar/FilterUtils.hh \
	include/radar/GateData.hh \
	include/radar/InterestMap.hh \
	include/radar/IwrfCalib.hh \
	include/radar/IwrfMomReader.hh \
	include/radar/IwrfMoments.hh \
	include/radar/IwrfTsBurst.hh \
	include/radar/IwrfTsInfo.hh \
	include/radar/IwrfTsPulse.hh \
	include/radar/IwrfTsReader.hh \
	include/radar/KdpBringi.hh \
	include/radar/KdpCompute.hh \
	include/radar/KdpFilt.hh \
	include/radar/MomentsFields.hh \
	include/radar/NcarParticleId.hh \
	include/radar/NoiseLocator.hh \
	include/radar/PhaseCoding.hh \
	include/radar/PidImapManager.hh \
	include/radar/PidInterestMap.hh \
	include/radar/PrecipRate.hh \
	include/radar/RadarComplex.hh \
	include/radar/RadarFft.hh \
	include/radar/RadarMoments.hh \
	include/radar/RadarTsInfo.hh \
	include/radar/RadarTsPulse.hh \
	include/radar/RadarTsReader.hh \
	include/radar/RadxApp.hh \
	include/radar/RadxAppArgs.hh \
	include/radar/RadxAppConfig.hh \
	include/radar/RadxAppParams.hh \
	include/radar/RadxAppTemplate.hh \
	include/radar/RegressionFilter.hh \
	include/radar/Sz864.hh \
	include/radar/TempProfile.hh \
	include/radar/chill_to_iwrf.hh \
	include/radar/chill_types.h \
	include/radar/iwrf_data.h \
	include/radar/iwrf_functions.hh \
	include/radar/iwrf_rsm.h \
	include/radar/iwrf_user_interface.h \
	include/radar/rsm_functions.hh \
	include/radar/spol_angles.hh \
	include/radar/syscon_to_spol.h

libradar_la_SOURCES = \
	complex/RadarComplex.cc \
	convstrat/ConvStrat.cc \
	dorade/spol_C_utils.c \
	dorade/DFileInput.cc \
	dorade/dd_mapper.cc \
	dorade/dd_sweepfiles.cc \
	dorade/dd_testify.cc \
	dorade/dd_utils.cc \
	dorade/kdp_calcs.cc \
	filter/DpolFilter.cc \
	filter/FilterUtils.cc \
	geom/BeamHeight.cc \
	iwrf/chill_to_iwrf.cc \
	iwrf/iwrf_functions.cc \
	iwrf/IwrfCalib.cc \
	iwrf/IwrfTsBurst.cc \
	iwrf/IwrfTsInfo.cc \
	iwrf/IwrfTsPulse.cc \
	iwrf/IwrfTsReader.cc \
	iwrf/rsm_functions.cc \
	kdp/KdpBringi.cc \
	kdp/KdpCompute.cc \
	kdp/KdpFilt.cc \
	moments/AlternatingVelocity.cc \
	moments/AtmosAtten.cc \
	moments/ClutFilter.cc \
	moments/GateData.cc \
	moments/MomentsFields.cc \
	moments/InterestMap.cc \
	moments/IwrfMoments.cc \
	moments/IwrfMomReader.cc \
	moments/NoiseLocator.cc \
	moments/PhaseCoding.cc \
	moments/RadarFft.cc \
	moments/RadarMoments.cc \
	moments/RegressionFilter.cc \
	moments/Sz864.cc \
	pid/NcarParticleId.cc \
	pid/PidImapManager.cc \
	pid/PidInterestMap.cc \
	pid/TempProfile.cc \
	precip/PrecipRate.cc \
	radx/RadxAppParams.cc \
	radx/RadxApp.cc \
	radx/RadxAppArgs.cc \
	radx/RadxAppConfig.cc \
	spol/spol_angles.cc \
	ts/RadarTsInfo.cc \
	ts/RadarTsPulse.cc \
	ts/RadarTsReader.cc

all: all-am

.SUFFIXES:
.SUFFIXES: .c .cc .lo .o .obj
$(srcdir)/makefile.in:  $(srcdir)/makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign libs/radar/src/makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign libs/radar/src/makefile
makefile: $(srcdir)/makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libradar.la: $(libradar_la_OBJECTS) $(libradar_la_DEPENDENCIES) $(EXTRA_libradar_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK) -rpath $(libdir) $(libradar_la_OBJECTS) $(libradar_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/AlternatingVelocity.Plo
include ./$(DEPDIR)/AtmosAtten.Plo
include ./$(DEPDIR)/BeamHeight.Plo
include ./$(DEPDIR)/ClutFilter.Plo
include ./$(DEPDIR)/ConvStrat.Plo
include ./$(DEPDIR)/DFileInput.Plo
include ./$(DEPDIR)/DpolFilter.Plo
include ./$(DEPDIR)/FilterUtils.Plo
include ./$(DEPDIR)/GateData.Plo
include ./$(DEPDIR)/InterestMap.Plo
include ./$(DEPDIR)/IwrfCalib.Plo
include ./$(DEPDIR)/IwrfMomReader.Plo
include ./$(DEPDIR)/IwrfMoments.Plo
include ./$(DEPDIR)/IwrfTsBurst.Plo
include ./$(DEPDIR)/IwrfTsInfo.Plo
include ./$(DEPDIR)/IwrfTsPulse.Plo
include ./$(DEPDIR)/IwrfTsReader.Plo
include ./$(DEPDIR)/KdpBringi.Plo
include ./$(DEPDIR)/KdpCompute.Plo
include ./$(DEPDIR)/KdpFilt.Plo
include ./$(DEPDIR)/MomentsFields.Plo
include ./$(DEPDIR)/NcarParticleId.Plo
include ./$(DEPDIR)/NoiseLocator.Plo
include ./$(DEPDIR)/PhaseCoding.Plo
include ./$(DEPDIR)/PidImapManager.Plo
include ./$(DEPDIR)/PidInterestMap.Plo
include ./$(DEPDIR)/PrecipRate.Plo
include ./$(DEPDIR)/RadarComplex.Plo
include ./$(DEPDIR)/RadarFft.Plo
include ./$(DEPDIR)/RadarMoments.Plo
include ./$(DEPDIR)/RadarTsInfo.Plo
include ./$(DEPDIR)/RadarTsPulse.Plo
include ./$(DEPDIR)/RadarTsReader.Plo
include ./$(DEPDIR)/RadxApp.Plo
include ./$(DEPDIR)/RadxAppArgs.Plo
include ./$(DEPDIR)/RadxAppConfig.Plo
include ./$(DEPDIR)/RadxAppParams.Plo
include ./$(DEPDIR)/RegressionFilter.Plo
include ./$(DEPDIR)/Sz864.Plo
include ./$(DEPDIR)/TempProfile.Plo
include ./$(DEPDIR)/chill_to_iwrf.Plo
include ./$(DEPDIR)/dd_mapper.Plo
include ./$(DEPDIR)/dd_sweepfiles.Plo
include ./$(DEPDIR)/dd_testify.Plo
include ./$(DEPDIR)/dd_utils.Plo
include ./$(DEPDIR)/iwrf_functions.Plo
include ./$(DEPDIR)/kdp_calcs.Plo
include ./$(DEPDIR)/rsm_functions.Plo
include ./$(DEPDIR)/spol_C_utils.Plo
include ./$(DEPDIR)/spol_angles.Plo

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

spol_C_utils.lo: dorade/spol_C_utils.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT spol_C_utils.lo -MD -MP -MF $(DEPDIR)/spol_C_utils.Tpo -c -o spol_C_utils.lo `test -f 'dorade/spol_C_utils.c' || echo '$(srcdir)/'`dorade/spol_C_utils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/spol_C_utils.Tpo $(DEPDIR)/spol_C_utils.Plo
#	$(AM_V_CC)source='dorade/spol_C_utils.c' object='spol_C_utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spol_C_utils.lo `test -f 'dorade/spol_C_utils.c' || echo '$(srcdir)/'`dorade/spol_C_utils.c

.cc.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

RadarComplex.lo: complex/RadarComplex.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RadarComplex.lo -MD -MP -MF $(DEPDIR)/RadarComplex.Tpo -c -o RadarComplex.lo `test -f 'complex/RadarComplex.cc' || echo '$(srcdir)/'`complex/RadarComplex.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/RadarComplex.Tpo $(DEPDIR)/RadarComplex.Plo
#	$(AM_V_CXX)source='complex/RadarComplex.cc' object='RadarComplex.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RadarComplex.lo `test -f 'complex/RadarComplex.cc' || echo '$(srcdir)/'`complex/RadarComplex.cc

ConvStrat.lo: convstrat/ConvStrat.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ConvStrat.lo -MD -MP -MF $(DEPDIR)/ConvStrat.Tpo -c -o ConvStrat.lo `test -f 'convstrat/ConvStrat.cc' || echo '$(srcdir)/'`convstrat/ConvStrat.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/ConvStrat.Tpo $(DEPDIR)/ConvStrat.Plo
#	$(AM_V_CXX)source='convstrat/ConvStrat.cc' object='ConvStrat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ConvStrat.lo `test -f 'convstrat/ConvStrat.cc' || echo '$(srcdir)/'`convstrat/ConvStrat.cc

DFileInput.lo: dorade/DFileInput.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DFileInput.lo -MD -MP -MF $(DEPDIR)/DFileInput.Tpo -c -o DFileInput.lo `test -f 'dorade/DFileInput.cc' || echo '$(srcdir)/'`dorade/DFileInput.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/DFileInput.Tpo $(DEPDIR)/DFileInput.Plo
#	$(AM_V_CXX)source='dorade/DFileInput.cc' object='DFileInput.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DFileInput.lo `test -f 'dorade/DFileInput.cc' || echo '$(srcdir)/'`dorade/DFileInput.cc

dd_mapper.lo: dorade/dd_mapper.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dd_mapper.lo -MD -MP -MF $(DEPDIR)/dd_mapper.Tpo -c -o dd_mapper.lo `test -f 'dorade/dd_mapper.cc' || echo '$(srcdir)/'`dorade/dd_mapper.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/dd_mapper.Tpo $(DEPDIR)/dd_mapper.Plo
#	$(AM_V_CXX)source='dorade/dd_mapper.cc' object='dd_mapper.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dd_mapper.lo `test -f 'dorade/dd_mapper.cc' || echo '$(srcdir)/'`dorade/dd_mapper.cc

dd_sweepfiles.lo: dorade/dd_sweepfiles.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dd_sweepfiles.lo -MD -MP -MF $(DEPDIR)/dd_sweepfiles.Tpo -c -o dd_sweepfiles.lo `test -f 'dorade/dd_sweepfiles.cc' || echo '$(srcdir)/'`dorade/dd_sweepfiles.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/dd_sweepfiles.Tpo $(DEPDIR)/dd_sweepfiles.Plo
#	$(AM_V_CXX)source='dorade/dd_sweepfiles.cc' object='dd_sweepfiles.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dd_sweepfiles.lo `test -f 'dorade/dd_sweepfiles.cc' || echo '$(srcdir)/'`dorade/dd_sweepfiles.cc

dd_testify.lo: dorade/dd_testify.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dd_testify.lo -MD -MP -MF $(DEPDIR)/dd_testify.Tpo -c -o dd_testify.lo `test -f 'dorade/dd_testify.cc' || echo '$(srcdir)/'`dorade/dd_testify.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/dd_testify.Tpo $(DEPDIR)/dd_testify.Plo
#	$(AM_V_CXX)source='dorade/dd_testify.cc' object='dd_testify.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dd_testify.lo `test -f 'dorade/dd_testify.cc' || echo '$(srcdir)/'`dorade/dd_testify.cc

dd_utils.lo: dorade/dd_utils.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dd_utils.lo -MD -MP -MF $(DEPDIR)/dd_utils.Tpo -c -o dd_utils.lo `test -f 'dorade/dd_utils.cc' || echo '$(srcdir)/'`dorade/dd_utils.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/dd_utils.Tpo $(DEPDIR)/dd_utils.Plo
#	$(AM_V_CXX)source='dorade/dd_utils.cc' object='dd_utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dd_utils.lo `test -f 'dorade/dd_utils.cc' || echo '$(srcdir)/'`dorade/dd_utils.cc

kdp_calcs.lo: dorade/kdp_calcs.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kdp_calcs.lo -MD -MP -MF $(DEPDIR)/kdp_calcs.Tpo -c -o kdp_calcs.lo `test -f 'dorade/kdp_calcs.cc' || echo '$(srcdir)/'`dorade/kdp_calcs.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/kdp_calcs.Tpo $(DEPDIR)/kdp_calcs.Plo
#	$(AM_V_CXX)source='dorade/kdp_calcs.cc' object='kdp_calcs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kdp_calcs.lo `test -f 'dorade/kdp_calcs.cc' || echo '$(srcdir)/'`dorade/kdp_calcs.cc

DpolFilter.lo: filter/DpolFilter.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DpolFilter.lo -MD -MP -MF $(DEPDIR)/DpolFilter.Tpo -c -o DpolFilter.lo `test -f 'filter/DpolFilter.cc' || echo '$(srcdir)/'`filter/DpolFilter.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/DpolFilter.Tpo $(DEPDIR)/DpolFilter.Plo
#	$(AM_V_CXX)source='filter/DpolFilter.cc' object='DpolFilter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DpolFilter.lo `test -f 'filter/DpolFilter.cc' || echo '$(srcdir)/'`filter/DpolFilter.cc

FilterUtils.lo: filter/FilterUtils.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FilterUtils.lo -MD -MP -MF $(DEPDIR)/FilterUtils.Tpo -c -o FilterUtils.lo `test -f 'filter/FilterUtils.cc' || echo '$(srcdir)/'`filter/FilterUtils.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/FilterUtils.Tpo $(DEPDIR)/FilterUtils.Plo
#	$(AM_V_CXX)source='filter/FilterUtils.cc' object='FilterUtils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FilterUtils.lo `test -f 'filter/FilterUtils.cc' || echo '$(srcdir)/'`filter/FilterUtils.cc

BeamHeight.lo: geom/BeamHeight.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BeamHeight.lo -MD -MP -MF $(DEPDIR)/BeamHeight.Tpo -c -o BeamHeight.lo `test -f 'geom/BeamHeight.cc' || echo '$(srcdir)/'`geom/BeamHeight.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/BeamHeight.Tpo $(DEPDIR)/BeamHeight.Plo
#	$(AM_V_CXX)source='geom/BeamHeight.cc' object='BeamHeight.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BeamHeight.lo `test -f 'geom/BeamHeight.cc' || echo '$(srcdir)/'`geom/BeamHeight.cc

chill_to_iwrf.lo: iwrf/chill_to_iwrf.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT chill_to_iwrf.lo -MD -MP -MF $(DEPDIR)/chill_to_iwrf.Tpo -c -o chill_to_iwrf.lo `test -f 'iwrf/chill_to_iwrf.cc' || echo '$(srcdir)/'`iwrf/chill_to_iwrf.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/chill_to_iwrf.Tpo $(DEPDIR)/chill_to_iwrf.Plo
#	$(AM_V_CXX)source='iwrf/chill_to_iwrf.cc' object='chill_to_iwrf.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chill_to_iwrf.lo `test -f 'iwrf/chill_to_iwrf.cc' || echo '$(srcdir)/'`iwrf/chill_to_iwrf.cc

iwrf_functions.lo: iwrf/iwrf_functions.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT iwrf_functions.lo -MD -MP -MF $(DEPDIR)/iwrf_functions.Tpo -c -o iwrf_functions.lo `test -f 'iwrf/iwrf_functions.cc' || echo '$(srcdir)/'`iwrf/iwrf_functions.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/iwrf_functions.Tpo $(DEPDIR)/iwrf_functions.Plo
#	$(AM_V_CXX)source='iwrf/iwrf_functions.cc' object='iwrf_functions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o iwrf_functions.lo `test -f 'iwrf/iwrf_functions.cc' || echo '$(srcdir)/'`iwrf/iwrf_functions.cc

IwrfCalib.lo: iwrf/IwrfCalib.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT IwrfCalib.lo -MD -MP -MF $(DEPDIR)/IwrfCalib.Tpo -c -o IwrfCalib.lo `test -f 'iwrf/IwrfCalib.cc' || echo '$(srcdir)/'`iwrf/IwrfCalib.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/IwrfCalib.Tpo $(DEPDIR)/IwrfCalib.Plo
#	$(AM_V_CXX)source='iwrf/IwrfCalib.cc' object='IwrfCalib.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o IwrfCalib.lo `test -f 'iwrf/IwrfCalib.cc' || echo '$(srcdir)/'`iwrf/IwrfCalib.cc

IwrfTsBurst.lo: iwrf/IwrfTsBurst.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT IwrfTsBurst.lo -MD -MP -MF $(DEPDIR)/IwrfTsBurst.Tpo -c -o IwrfTsBurst.lo `test -f 'iwrf/IwrfTsBurst.cc' || echo '$(srcdir)/'`iwrf/IwrfTsBurst.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/IwrfTsBurst.Tpo $(DEPDIR)/IwrfTsBurst.Plo
#	$(AM_V_CXX)source='iwrf/IwrfTsBurst.cc' object='IwrfTsBurst.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o IwrfTsBurst.lo `test -f 'iwrf/IwrfTsBurst.cc' || echo '$(srcdir)/'`iwrf/IwrfTsBurst.cc

IwrfTsInfo.lo: iwrf/IwrfTsInfo.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT IwrfTsInfo.lo -MD -MP -MF $(DEPDIR)/IwrfTsInfo.Tpo -c -o IwrfTsInfo.lo `test -f 'iwrf/IwrfTsInfo.cc' || echo '$(srcdir)/'`iwrf/IwrfTsInfo.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/IwrfTsInfo.Tpo $(DEPDIR)/IwrfTsInfo.Plo
#	$(AM_V_CXX)source='iwrf/IwrfTsInfo.cc' object='IwrfTsInfo.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o IwrfTsInfo.lo `test -f 'iwrf/IwrfTsInfo.cc' || echo '$(srcdir)/'`iwrf/IwrfTsInfo.cc

IwrfTsPulse.lo: iwrf/IwrfTsPulse.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT IwrfTsPulse.lo -MD -MP -MF $(DEPDIR)/IwrfTsPulse.Tpo -c -o IwrfTsPulse.lo `test -f 'iwrf/IwrfTsPulse.cc' || echo '$(srcdir)/'`iwrf/IwrfTsPulse.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/IwrfTsPulse.Tpo $(DEPDIR)/IwrfTsPulse.Plo
#	$(AM_V_CXX)source='iwrf/IwrfTsPulse.cc' object='IwrfTsPulse.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o IwrfTsPulse.lo `test -f 'iwrf/IwrfTsPulse.cc' || echo '$(srcdir)/'`iwrf/IwrfTsPulse.cc

IwrfTsReader.lo: iwrf/IwrfTsReader.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT IwrfTsReader.lo -MD -MP -MF $(DEPDIR)/IwrfTsReader.Tpo -c -o IwrfTsReader.lo `test -f 'iwrf/IwrfTsReader.cc' || echo '$(srcdir)/'`iwrf/IwrfTsReader.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/IwrfTsReader.Tpo $(DEPDIR)/IwrfTsReader.Plo
#	$(AM_V_CXX)source='iwrf/IwrfTsReader.cc' object='IwrfTsReader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o IwrfTsReader.lo `test -f 'iwrf/IwrfTsReader.cc' || echo '$(srcdir)/'`iwrf/IwrfTsReader.cc

rsm_functions.lo: iwrf/rsm_functions.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rsm_functions.lo -MD -MP -MF $(DEPDIR)/rsm_functions.Tpo -c -o rsm_functions.lo `test -f 'iwrf/rsm_functions.cc' || echo '$(srcdir)/'`iwrf/rsm_functions.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/rsm_functions.Tpo $(DEPDIR)/rsm_functions.Plo
#	$(AM_V_CXX)source='iwrf/rsm_functions.cc' object='rsm_functions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rsm_functions.lo `test -f 'iwrf/rsm_functions.cc' || echo '$(srcdir)/'`iwrf/rsm_functions.cc

KdpBringi.lo: kdp/KdpBringi.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KdpBringi.lo -MD -MP -MF $(DEPDIR)/KdpBringi.Tpo -c -o KdpBringi.lo `test -f 'kdp/KdpBringi.cc' || echo '$(srcdir)/'`kdp/KdpBringi.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/KdpBringi.Tpo $(DEPDIR)/KdpBringi.Plo
#	$(AM_V_CXX)source='kdp/KdpBringi.cc' object='KdpBringi.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KdpBringi.lo `test -f 'kdp/KdpBringi.cc' || echo '$(srcdir)/'`kdp/KdpBringi.cc

KdpCompute.lo: kdp/KdpCompute.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KdpCompute.lo -MD -MP -MF $(DEPDIR)/KdpCompute.Tpo -c -o KdpCompute.lo `test -f 'kdp/KdpCompute.cc' || echo '$(srcdir)/'`kdp/KdpCompute.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/KdpCompute.Tpo $(DEPDIR)/KdpCompute.Plo
#	$(AM_V_CXX)source='kdp/KdpCompute.cc' object='KdpCompute.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KdpCompute.lo `test -f 'kdp/KdpCompute.cc' || echo '$(srcdir)/'`kdp/KdpCompute.cc

KdpFilt.lo: kdp/KdpFilt.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KdpFilt.lo -MD -MP -MF $(DEPDIR)/KdpFilt.Tpo -c -o KdpFilt.lo `test -f 'kdp/KdpFilt.cc' || echo '$(srcdir)/'`kdp/KdpFilt.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/KdpFilt.Tpo $(DEPDIR)/KdpFilt.Plo
#	$(AM_V_CXX)source='kdp/KdpFilt.cc' object='KdpFilt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KdpFilt.lo `test -f 'kdp/KdpFilt.cc' || echo '$(srcdir)/'`kdp/KdpFilt.cc

AlternatingVelocity.lo: moments/AlternatingVelocity.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AlternatingVelocity.lo -MD -MP -MF $(DEPDIR)/AlternatingVelocity.Tpo -c -o AlternatingVelocity.lo `test -f 'moments/AlternatingVelocity.cc' || echo '$(srcdir)/'`moments/AlternatingVelocity.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/AlternatingVelocity.Tpo $(DEPDIR)/AlternatingVelocity.Plo
#	$(AM_V_CXX)source='moments/AlternatingVelocity.cc' object='AlternatingVelocity.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AlternatingVelocity.lo `test -f 'moments/AlternatingVelocity.cc' || echo '$(srcdir)/'`moments/AlternatingVelocity.cc

AtmosAtten.lo: moments/AtmosAtten.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AtmosAtten.lo -MD -MP -MF $(DEPDIR)/AtmosAtten.Tpo -c -o AtmosAtten.lo `test -f 'moments/AtmosAtten.cc' || echo '$(srcdir)/'`moments/AtmosAtten.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/AtmosAtten.Tpo $(DEPDIR)/AtmosAtten.Plo
#	$(AM_V_CXX)source='moments/AtmosAtten.cc' object='AtmosAtten.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AtmosAtten.lo `test -f 'moments/AtmosAtten.cc' || echo '$(srcdir)/'`moments/AtmosAtten.cc

ClutFilter.lo: moments/ClutFilter.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ClutFilter.lo -MD -MP -MF $(DEPDIR)/ClutFilter.Tpo -c -o ClutFilter.lo `test -f 'moments/ClutFilter.cc' || echo '$(srcdir)/'`moments/ClutFilter.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/ClutFilter.Tpo $(DEPDIR)/ClutFilter.Plo
#	$(AM_V_CXX)source='moments/ClutFilter.cc' object='ClutFilter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ClutFilter.lo `test -f 'moments/ClutFilter.cc' || echo '$(srcdir)/'`moments/ClutFilter.cc

GateData.lo: moments/GateData.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GateData.lo -MD -MP -MF $(DEPDIR)/GateData.Tpo -c -o GateData.lo `test -f 'moments/GateData.cc' || echo '$(srcdir)/'`moments/GateData.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/GateData.Tpo $(DEPDIR)/GateData.Plo
#	$(AM_V_CXX)source='moments/GateData.cc' object='GateData.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GateData.lo `test -f 'moments/GateData.cc' || echo '$(srcdir)/'`moments/GateData.cc

MomentsFields.lo: moments/MomentsFields.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MomentsFields.lo -MD -MP -MF $(DEPDIR)/MomentsFields.Tpo -c -o MomentsFields.lo `test -f 'moments/MomentsFields.cc' || echo '$(srcdir)/'`moments/MomentsFields.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/MomentsFields.Tpo $(DEPDIR)/MomentsFields.Plo
#	$(AM_V_CXX)source='moments/MomentsFields.cc' object='MomentsFields.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MomentsFields.lo `test -f 'moments/MomentsFields.cc' || echo '$(srcdir)/'`moments/MomentsFields.cc

InterestMap.lo: moments/InterestMap.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT InterestMap.lo -MD -MP -MF $(DEPDIR)/InterestMap.Tpo -c -o InterestMap.lo `test -f 'moments/InterestMap.cc' || echo '$(srcdir)/'`moments/InterestMap.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/InterestMap.Tpo $(DEPDIR)/InterestMap.Plo
#	$(AM_V_CXX)source='moments/InterestMap.cc' object='InterestMap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InterestMap.lo `test -f 'moments/InterestMap.cc' || echo '$(srcdir)/'`moments/InterestMap.cc

IwrfMoments.lo: moments/IwrfMoments.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT IwrfMoments.lo -MD -MP -MF $(DEPDIR)/IwrfMoments.Tpo -c -o IwrfMoments.lo `test -f 'moments/IwrfMoments.cc' || echo '$(srcdir)/'`moments/IwrfMoments.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/IwrfMoments.Tpo $(DEPDIR)/IwrfMoments.Plo
#	$(AM_V_CXX)source='moments/IwrfMoments.cc' object='IwrfMoments.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o IwrfMoments.lo `test -f 'moments/IwrfMoments.cc' || echo '$(srcdir)/'`moments/IwrfMoments.cc

IwrfMomReader.lo: moments/IwrfMomReader.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT IwrfMomReader.lo -MD -MP -MF $(DEPDIR)/IwrfMomReader.Tpo -c -o IwrfMomReader.lo `test -f 'moments/IwrfMomReader.cc' || echo '$(srcdir)/'`moments/IwrfMomReader.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/IwrfMomReader.Tpo $(DEPDIR)/IwrfMomReader.Plo
#	$(AM_V_CXX)source='moments/IwrfMomReader.cc' object='IwrfMomReader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o IwrfMomReader.lo `test -f 'moments/IwrfMomReader.cc' || echo '$(srcdir)/'`moments/IwrfMomReader.cc

NoiseLocator.lo: moments/NoiseLocator.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NoiseLocator.lo -MD -MP -MF $(DEPDIR)/NoiseLocator.Tpo -c -o NoiseLocator.lo `test -f 'moments/NoiseLocator.cc' || echo '$(srcdir)/'`moments/NoiseLocator.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/NoiseLocator.Tpo $(DEPDIR)/NoiseLocator.Plo
#	$(AM_V_CXX)source='moments/NoiseLocator.cc' object='NoiseLocator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NoiseLocator.lo `test -f 'moments/NoiseLocator.cc' || echo '$(srcdir)/'`moments/NoiseLocator.cc

PhaseCoding.lo: moments/PhaseCoding.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PhaseCoding.lo -MD -MP -MF $(DEPDIR)/PhaseCoding.Tpo -c -o PhaseCoding.lo `test -f 'moments/PhaseCoding.cc' || echo '$(srcdir)/'`moments/PhaseCoding.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/PhaseCoding.Tpo $(DEPDIR)/PhaseCoding.Plo
#	$(AM_V_CXX)source='moments/PhaseCoding.cc' object='PhaseCoding.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PhaseCoding.lo `test -f 'moments/PhaseCoding.cc' || echo '$(srcdir)/'`moments/PhaseCoding.cc

RadarFft.lo: moments/RadarFft.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RadarFft.lo -MD -MP -MF $(DEPDIR)/RadarFft.Tpo -c -o RadarFft.lo `test -f 'moments/RadarFft.cc' || echo '$(srcdir)/'`moments/RadarFft.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/RadarFft.Tpo $(DEPDIR)/RadarFft.Plo
#	$(AM_V_CXX)source='moments/RadarFft.cc' object='RadarFft.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RadarFft.lo `test -f 'moments/RadarFft.cc' || echo '$(srcdir)/'`moments/RadarFft.cc

RadarMoments.lo: moments/RadarMoments.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RadarMoments.lo -MD -MP -MF $(DEPDIR)/RadarMoments.Tpo -c -o RadarMoments.lo `test -f 'moments/RadarMoments.cc' || echo '$(srcdir)/'`moments/RadarMoments.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/RadarMoments.Tpo $(DEPDIR)/RadarMoments.Plo
#	$(AM_V_CXX)source='moments/RadarMoments.cc' object='RadarMoments.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RadarMoments.lo `test -f 'moments/RadarMoments.cc' || echo '$(srcdir)/'`moments/RadarMoments.cc

RegressionFilter.lo: moments/RegressionFilter.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RegressionFilter.lo -MD -MP -MF $(DEPDIR)/RegressionFilter.Tpo -c -o RegressionFilter.lo `test -f 'moments/RegressionFilter.cc' || echo '$(srcdir)/'`moments/RegressionFilter.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/RegressionFilter.Tpo $(DEPDIR)/RegressionFilter.Plo
#	$(AM_V_CXX)source='moments/RegressionFilter.cc' object='RegressionFilter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RegressionFilter.lo `test -f 'moments/RegressionFilter.cc' || echo '$(srcdir)/'`moments/RegressionFilter.cc

Sz864.lo: moments/Sz864.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Sz864.lo -MD -MP -MF $(DEPDIR)/Sz864.Tpo -c -o Sz864.lo `test -f 'moments/Sz864.cc' || echo '$(srcdir)/'`moments/Sz864.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/Sz864.Tpo $(DEPDIR)/Sz864.Plo
#	$(AM_V_CXX)source='moments/Sz864.cc' object='Sz864.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Sz864.lo `test -f 'moments/Sz864.cc' || echo '$(srcdir)/'`moments/Sz864.cc

NcarParticleId.lo: pid/NcarParticleId.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NcarParticleId.lo -MD -MP -MF $(DEPDIR)/NcarParticleId.Tpo -c -o NcarParticleId.lo `test -f 'pid/NcarParticleId.cc' || echo '$(srcdir)/'`pid/NcarParticleId.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/NcarParticleId.Tpo $(DEPDIR)/NcarParticleId.Plo
#	$(AM_V_CXX)source='pid/NcarParticleId.cc' object='NcarParticleId.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NcarParticleId.lo `test -f 'pid/NcarParticleId.cc' || echo '$(srcdir)/'`pid/NcarParticleId.cc

PidImapManager.lo: pid/PidImapManager.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PidImapManager.lo -MD -MP -MF $(DEPDIR)/PidImapManager.Tpo -c -o PidImapManager.lo `test -f 'pid/PidImapManager.cc' || echo '$(srcdir)/'`pid/PidImapManager.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/PidImapManager.Tpo $(DEPDIR)/PidImapManager.Plo
#	$(AM_V_CXX)source='pid/PidImapManager.cc' object='PidImapManager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PidImapManager.lo `test -f 'pid/PidImapManager.cc' || echo '$(srcdir)/'`pid/PidImapManager.cc

PidInterestMap.lo: pid/PidInterestMap.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PidInterestMap.lo -MD -MP -MF $(DEPDIR)/PidInterestMap.Tpo -c -o PidInterestMap.lo `test -f 'pid/PidInterestMap.cc' || echo '$(srcdir)/'`pid/PidInterestMap.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/PidInterestMap.Tpo $(DEPDIR)/PidInterestMap.Plo
#	$(AM_V_CXX)source='pid/PidInterestMap.cc' object='PidInterestMap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PidInterestMap.lo `test -f 'pid/PidInterestMap.cc' || echo '$(srcdir)/'`pid/PidInterestMap.cc

TempProfile.lo: pid/TempProfile.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TempProfile.lo -MD -MP -MF $(DEPDIR)/TempProfile.Tpo -c -o TempProfile.lo `test -f 'pid/TempProfile.cc' || echo '$(srcdir)/'`pid/TempProfile.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/TempProfile.Tpo $(DEPDIR)/TempProfile.Plo
#	$(AM_V_CXX)source='pid/TempProfile.cc' object='TempProfile.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TempProfile.lo `test -f 'pid/TempProfile.cc' || echo '$(srcdir)/'`pid/TempProfile.cc

PrecipRate.lo: precip/PrecipRate.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PrecipRate.lo -MD -MP -MF $(DEPDIR)/PrecipRate.Tpo -c -o PrecipRate.lo `test -f 'precip/PrecipRate.cc' || echo '$(srcdir)/'`precip/PrecipRate.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/PrecipRate.Tpo $(DEPDIR)/PrecipRate.Plo
#	$(AM_V_CXX)source='precip/PrecipRate.cc' object='PrecipRate.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PrecipRate.lo `test -f 'precip/PrecipRate.cc' || echo '$(srcdir)/'`precip/PrecipRate.cc

RadxAppParams.lo: radx/RadxAppParams.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RadxAppParams.lo -MD -MP -MF $(DEPDIR)/RadxAppParams.Tpo -c -o RadxAppParams.lo `test -f 'radx/RadxAppParams.cc' || echo '$(srcdir)/'`radx/RadxAppParams.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/RadxAppParams.Tpo $(DEPDIR)/RadxAppParams.Plo
#	$(AM_V_CXX)source='radx/RadxAppParams.cc' object='RadxAppParams.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RadxAppParams.lo `test -f 'radx/RadxAppParams.cc' || echo '$(srcdir)/'`radx/RadxAppParams.cc

RadxApp.lo: radx/RadxApp.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RadxApp.lo -MD -MP -MF $(DEPDIR)/RadxApp.Tpo -c -o RadxApp.lo `test -f 'radx/RadxApp.cc' || echo '$(srcdir)/'`radx/RadxApp.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/RadxApp.Tpo $(DEPDIR)/RadxApp.Plo
#	$(AM_V_CXX)source='radx/RadxApp.cc' object='RadxApp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RadxApp.lo `test -f 'radx/RadxApp.cc' || echo '$(srcdir)/'`radx/RadxApp.cc

RadxAppArgs.lo: radx/RadxAppArgs.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RadxAppArgs.lo -MD -MP -MF $(DEPDIR)/RadxAppArgs.Tpo -c -o RadxAppArgs.lo `test -f 'radx/RadxAppArgs.cc' || echo '$(srcdir)/'`radx/RadxAppArgs.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/RadxAppArgs.Tpo $(DEPDIR)/RadxAppArgs.Plo
#	$(AM_V_CXX)source='radx/RadxAppArgs.cc' object='RadxAppArgs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RadxAppArgs.lo `test -f 'radx/RadxAppArgs.cc' || echo '$(srcdir)/'`radx/RadxAppArgs.cc

RadxAppConfig.lo: radx/RadxAppConfig.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RadxAppConfig.lo -MD -MP -MF $(DEPDIR)/RadxAppConfig.Tpo -c -o RadxAppConfig.lo `test -f 'radx/RadxAppConfig.cc' || echo '$(srcdir)/'`radx/RadxAppConfig.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/RadxAppConfig.Tpo $(DEPDIR)/RadxAppConfig.Plo
#	$(AM_V_CXX)source='radx/RadxAppConfig.cc' object='RadxAppConfig.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RadxAppConfig.lo `test -f 'radx/RadxAppConfig.cc' || echo '$(srcdir)/'`radx/RadxAppConfig.cc

spol_angles.lo: spol/spol_angles.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spol_angles.lo -MD -MP -MF $(DEPDIR)/spol_angles.Tpo -c -o spol_angles.lo `test -f 'spol/spol_angles.cc' || echo '$(srcdir)/'`spol/spol_angles.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/spol_angles.Tpo $(DEPDIR)/spol_angles.Plo
#	$(AM_V_CXX)source='spol/spol_angles.cc' object='spol_angles.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spol_angles.lo `test -f 'spol/spol_angles.cc' || echo '$(srcdir)/'`spol/spol_angles.cc

RadarTsInfo.lo: ts/RadarTsInfo.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RadarTsInfo.lo -MD -MP -MF $(DEPDIR)/RadarTsInfo.Tpo -c -o RadarTsInfo.lo `test -f 'ts/RadarTsInfo.cc' || echo '$(srcdir)/'`ts/RadarTsInfo.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/RadarTsInfo.Tpo $(DEPDIR)/RadarTsInfo.Plo
#	$(AM_V_CXX)source='ts/RadarTsInfo.cc' object='RadarTsInfo.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RadarTsInfo.lo `test -f 'ts/RadarTsInfo.cc' || echo '$(srcdir)/'`ts/RadarTsInfo.cc

RadarTsPulse.lo: ts/RadarTsPulse.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RadarTsPulse.lo -MD -MP -MF $(DEPDIR)/RadarTsPulse.Tpo -c -o RadarTsPulse.lo `test -f 'ts/RadarTsPulse.cc' || echo '$(srcdir)/'`ts/RadarTsPulse.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/RadarTsPulse.Tpo $(DEPDIR)/RadarTsPulse.Plo
#	$(AM_V_CXX)source='ts/RadarTsPulse.cc' object='RadarTsPulse.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RadarTsPulse.lo `test -f 'ts/RadarTsPulse.cc' || echo '$(srcdir)/'`ts/RadarTsPulse.cc

RadarTsReader.lo: ts/RadarTsReader.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RadarTsReader.lo -MD -MP -MF $(DEPDIR)/RadarTsReader.Tpo -c -o RadarTsReader.lo `test -f 'ts/RadarTsReader.cc' || echo '$(srcdir)/'`ts/RadarTsReader.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/RadarTsReader.Tpo $(DEPDIR)/RadarTsReader.Plo
#	$(AM_V_CXX)source='ts/RadarTsReader.cc' object='RadarTsReader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RadarTsReader.lo `test -f 'ts/RadarTsReader.cc' || echo '$(srcdir)/'`ts/RadarTsReader.cc

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-libLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES

.PRECIOUS: makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
